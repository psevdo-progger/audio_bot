import telebot
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

import functions

TOKEN = "6079306018:AAEg2PhJjhgLkVs18yAmwM_ef8R6YA3TQuk"
bot = telebot.TeleBot(TOKEN)

btn1 = KeyboardButton('video ‚û°Ô∏è audio')
btn2 = KeyboardButton('video ‚ûï audio')
btn3 = KeyboardButton('audio ‚ûï audio')
markup = ReplyKeyboardMarkup(resize_keyboard=True)
markup.row(btn1, btn2, btn3)
btn1 = KeyboardButton("–ì–æ–ª–æ—Å–æ–≤–æ–µ üé§")
btn2 = KeyboardButton("–ê—É–¥–∏–æ—Ñ–∞–π–ª üéµ")
selectAudioMarkup = ReplyKeyboardMarkup(resize_keyboard=True)
selectAudioMarkup.add(btn1, btn2)

hideBoard = ReplyKeyboardRemove()
error = functions.Error(bot, markup)


# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
@bot.message_handler(commands=['start'])
def handle_start(message: Message):
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, {}üëã.\n"
                     "–Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏:".format(
                         message.from_user), reply_markup=markup)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def handle_text(message):
    user_id = message.chat.id
    if message.text == 'video ‚û°Ô∏è audio':
        msg = bot.send_message(user_id, "–∂–¥—É –≤–∏–¥–µ–æ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∞—É–¥–∏–æ üé¶", reply_markup=hideBoard)
        bot.register_next_step_handler(msg, video2audio)
    elif message.text == 'video ‚ûï audio':
        msg = bot.send_message(user_id, "–∂–¥—É –≤–∏–¥–µ–æ –¥–ª—è –Ω–∞–ª–æ–∂–µ–Ω–∏—è üé¶", reply_markup=hideBoard)
        bot.register_next_step_handler(msg, overlay)
    elif message.text == 'audio ‚ûï audio':
        msg = bot.send_message(user_id, "–∂–¥—É –ø–µ—Ä–≤–æ–µ –∞—É–¥–∏–æ üéµ", reply_markup=hideBoard)
        bot.register_next_step_handler(msg, audio_audio)

    else:
        bot.send_message(user_id, "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ü§û", reply_markup=markup)


def video2audio(message: Message):
    user_id = message.chat.id
    local_file_name = functions.downloadVideo(bot, message)
    result_audio = functions.extractAudio(bot, message, local_file_name)
    if result_audio:
        with open(result_audio, 'rb') as audio_file:
            bot.send_audio(user_id, audio_file, title=f"{message.video.file_name.split('.')[0]}_audio-bot.mp3")
        bot.send_message(user_id, "–∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–∏–ª, –±—É–¥—É –∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ üòä", reply_markup=markup)
    else:
        error.sendError(user_id)
    functions.deleteUserFiles(user_id)


def overlay(message: Message):
    local_file_name = functions.downloadVideo(bot, message)
    msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å –∫–∞–∫–∏–º —Ç–∏–ø–æ–º –∞—É–¥–∏–æ –º–Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å:", reply_markup=selectAudioMarkup)
    bot.register_next_step_handler(msg, overlay_select_type, local_file_name)


def overlay_select_type(message: Message, local_file_name):
    text = '–ñ–¥—É –∞—É–¥–∏–æ üéµ'
    if message.text == "–ì–æ–ª–æ—Å–æ–≤–æ–µ üé§":
        text = '–ñ–¥—É –≥–æ–ª–æ—Å–æ–≤–æ–µ üé§'
    msg = bot.send_message(message.chat.id, text, reply_markup=hideBoard)
    bot.register_next_step_handler(msg, overlay_audio, local_file_name, text)


def overlay_audio(message: Message, local_file_name, text):
    user_id = message.chat.id
    if message.content_type == "voice":
        local_mp3_file_name = functions.downloadConvertVoice(bot, message)
    elif message.content_type == "audio":
        local_mp3_file_name = functions.downloadAudio(bot, message)
    else:
        return bot.send_message(user_id, text)
    result_video = functions.overlayMedia(bot, user_id, local_file_name, local_mp3_file_name)
    if result_video:
        with open(result_video, 'rb') as final_video:
            bot.send_video(user_id, final_video)
        bot.send_message(user_id, "–∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–∏–ª, –±—É–¥—É –∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ üòä", reply_markup=markup)
    else:
        error.sendError(user_id)
    functions.deleteUserFiles(user_id)


def audio_audio(message: Message):
    local_file_name = functions.downloadAudio(bot, message)
    msg = bot.send_message(message.chat.id, "–∂–¥—É –≤—Ç–æ—Ä–æ–µ –∞—É–¥–∏–æ üéµ")
    bot.register_next_step_handler(msg, audio_audio2, local_file_name)


def audio_audio2(message: Message, local_file_name):
    user_id = message.chat.id
    local_file_name2 = functions.downloadAudio(bot, message)
    result_audio = functions.concatenateAudio(bot, user_id, local_file_name, local_file_name2)
    if result_audio:
        with open(result_audio, 'rb') as audio_file:
            bot.send_audio(user_id, audio_file, title=f"{message.audio.file_name.split('.')[0]}_audio-bot.mp3")
        bot.send_message(user_id, "–∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–∏–ª, –±—É–¥—É –∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ üòä", reply_markup=markup)
    else:
        error.sendError(user_id)
    functions.deleteUserFiles(user_id)


# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ Loop
bot.polling(none_stop=True)
